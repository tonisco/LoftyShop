name: deploy

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: docker.io
    # github.repository as <account>/<repo>
    IMAGE_NAME: ${{ github.repository }}

jobs:
    docker:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Checkout
              run: docker-compose build --no-cache --force-rm

    push_to_registry:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Hub
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  # list of Docker images to use as base name for tags
                  images:
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                      # |
                      # ${{ secrets.DOCKERHUB_USERNAME }}/shop
                      # ghcr.io/username/app
                  # generate Docker tags based on the following events/attributes
                  # tags: |
                  #     type=schedule
                  #     type=ref,event=branch
                  #     type=ref,event=pr
                  #     type=semver,pattern={{version}}
                  #     type=semver,pattern={{major}}.{{minor}}
                  #     type=semver,pattern={{major}}
                  #     type=sha

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
